<!DOCTYPE html>
<html>
<head>
    <title>Artifact history matrix</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Feb 22 2017 16:17:43 GMT-0700 (MST) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Feb 22 2017 16:17:43 GMT-0700 (MST)";
        var STORY    = "--";
        var BUILDER  = "kcorkan";
        var CHECKSUM = 5868575325;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("CA.agile.technicalservices.HistoryMatrixCalculator",{extend:"Rally.data.lookback.calculator.TimeSeriesCalculator",noneText:"-- None --",getMetrics:function(){for(var a=[],b=0;b<this.buckets.length;b++){var c=this.buckets[b];a.push({field:this.bucketField,as:c.toString(),f:"filteredCount",filterField:this.bucketField,filterValues:[c],display:"column"})}return a},prepareChartData:function(a){var b=[],c=[];return a.each(function(a){var d=a.getData(),e=d[this.bucketField]||this.noneText;Ext.isObject(e)&&(console.log("bucketValue",e),e=e._refObjectName||e.Name),Ext.Array.contains(c,e)||c.push(e),d[this.bucketField]=e,b.push(d)},this),this.buckets=c,this.runCalculation(b)}}),Ext.define("CA.agile.technicalservices.HydrationHelper",{singleton:!0,getFieldModelType:function(a){return Ext.Array.contains(["Owner","SubmittedBy","Tester"],a)?"User":null},getFieldFetchList:function(a){var b=CA.agile.technicalservices.HydrationHelper.getFieldModelType(a);return"User"===b?["ObjectID","UserName","DisplayName","FirstName","LastName"]:["ObjectID"]},needsManualHydration:function(a){return Ext.Array.contains(["Owner","SubmittedBy"],a)},getHydrateConfig:function(a){return Ext.Array.contains(["Project","State","ScheduleState","Iteration","Release","Priority","Severity","Environment"],a)?[a]:void 0}}),Ext.define("artifact-history-matrix",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"selector_box",layout:"hbox",html:'<div class="rally-title">Filter By</div>'},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"artifact-history-matrix"},bucketFieldWhitelist:["Project","Owner","SubmittedBy","ScheduleState","State","Priority","Severity","Environment"],bucketFieldAttributeTypeWhitelist:["STRING"],config:{defaultSettings:{artifactType:"Defect",historicalDays:4,bucketField:"SubmittedBy"}},launch:function(){Rally.dependencies.Analytics.load(function(){Ext.Function.defer(this.addSelectors,1,this)},this)},updateView:function(){var a=this.down("rallymilestonepicker").getValue(),b=this.down("rallytagpicker").getValue(),c=this.down("rallyfieldvaluecombobox").getValue();this.logger.log("updateView",c,a,b||"no tags"),this.getDisplayBox().removeAll(),this.fetchData(a,b,c)},addSelectors:function(){this.getSelectorBox().removeAll();var a=this.getSelectorBox().add({xtype:"rallyfieldvaluecombobox",margin:"25 10 10 10",fieldLabel:"State",labelWidth:50,model:this.getArtifactType(),field:"State",multiSelect:!0,labelAlign:"right",stateful:!0,stateId:"state-picker",width:200});a.on("select",this.updateView,this);var b=this.getSelectorBox().add({xtype:"rallymilestonepicker",storeConfig:{context:{project:null}},labelWidth:50,margin:"25 10 10 10",fieldLabel:"Milestone",labelAlign:"right",labelSeparator:"",width:250});b.on("selectionchange",this.updateView,this);var c=this.getSelectorBox().add({xtype:"rallytagpicker",margin:"25 10 10 10",fieldLabel:"Tag",labelAlign:"right",labelWidth:50,labelSeparator:"",width:250});c.on("selectionchange",this.updateView,this),this.updateView()},showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},processData:function(a){this.setLoading(!1);var b=Ext.create("CA.agile.technicalservices.HistoryMatrixCalculator",{startDate:Rally.util.DateTime.fromIsoString(this.getIsoStartDate()),endDate:new Date,bucketField:this.getBucketField()}),c=b.prepareChartData(a);this.logger.log("processData",c),CA.agile.technicalservices.HydrationHelper.needsManualHydration(this.getBucketField())?(this.setLoading("Hydrating..."),this.fetchMetaData(b.buckets).then({success:function(a){this.buildGrid(c,a)},failure:function(a){this.showErrorNotification(a),this.buildGrid(c)},scope:this}).always(function(){this.setLoading(!1)},this)):this.buildGrid(c)},buildGrid:function(a,b){var c=this.getBucketField(),d=[c].concat(a.categories);this.logger.log("buildGrid",a,d,c);for(var e=[],f=0;f<a.series.length;f++){var g=a.series[f],h={};h[c]=g.name,b&&(b[g.name]||b[g.name.toString()])&&(h[c]=b[g.name]||b[g.name.toString()]);for(var i=0;i<a.categories.length;i++)h[a.categories[i]]=g.data[i];e.push(h)}this.logger.log("buildGrid storeData",e);var j=Ext.create("Rally.data.custom.Store",{fields:d,data:e,pageSize:e.length});this.getDisplayBox().removeAll(),this.getDisplayBox().add({xtype:"rallygrid",store:j,columnCfgs:this.getColumnCfgs(a.categories),showRowActionsColumn:!1,showPagingToolbar:!1})},getColumnCfgs:function(a){var b=[{dataIndex:this.getBucketField(),text:this.getBucketField(),flex:1}];return Ext.Array.each(a,function(a){b.push({dataIndex:a,text:a})}),b},fetchMetaData:function(a){var b=Ext.create("Deft.Deferred");this.logger.log("fetchMetaData",a);var c=[];return Ext.Array.each(a,function(a){isNaN(a)||c.push({property:"ObjectID",value:a})}),c.length>1&&(c=Rally.data.wsapi.Filter.or(c)),this.logger.log("filters",c,c.toString()),Ext.create("Rally.data.wsapi.Store",{model:CA.agile.technicalservices.HydrationHelper.getFieldModelType(this.getBucketField()),fetch:CA.agile.technicalservices.HydrationHelper.getFieldFetchList(this.getBucketField()),filters:c,enablePostGet:!0,limit:a.length,context:{project:null},pageSize:Math.min(2e3,a.length)}).load({callback:function(a,c){if(c.wasSuccessful()){var d=_.reduce(a,function(a,b){return a[b.get("ObjectID")]=b.get("_refObjectName"),a},{});b.resolve(d)}else b.reject("Error loading meta data.  Object IDs will be displayed instead:  "+c.error.errors.join(","))}}),b.promise},getObjectIDList:function(a){return Ext.Array.map(a,function(a){return a.get("ObjectID")})},fetchData:function(a,b,c){var d={_TypeHierarchy:this.getArtifactType(),_ValidTo:{$gte:this.getIsoStartDate()}};a&&a.length>0&&(d.Milestones={$in:this.getObjectIDList(a)}),b&&b.length>0&&(d.Tags={$in:this.getObjectIDList(b)}),c&&c.length>0&&(d.State={$in:c}),this.logger.log("fetchData",d,this.getBucketField()),this.setLoading(!0);var e=Ext.create("Rally.data.lookback.SnapshotStore",{findConfig:d,fetch:[this.getBucketField(),"_ValidFrom","_ValidTo"],limit:1/0,removeUnauthorizedSnapshots:!0,hydrate:CA.agile.technicalservices.HydrationHelper.getHydrateConfig(this.getBucketField())});e.on("load",this.processData,this),e.load()},getIsoStartDate:function(){var a=new Date;a.setHours(0),a.setMinutes(0),a.setSeconds(0);var b=Rally.util.DateTime.add(a,"day",this.getDaysBack()-1);return Rally.util.DateTime.toIsoString(b)},getDaysBack:function(){var a=this.getSetting("historicalDays")||5;return-a},getBucketField:function(){return this.getSetting("bucketField")||"Project"},getArtifactType:function(){return this.getSetting("artifactType")||"Defect"},getDisplayBox:function(){return this.down("#display_box")},getSelectorBox:function(){return this.down("#selector_box")},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},getSettingsFields:function(a,b){var a=this.bucketFieldAttributeTypeWhitelist,b=this.bucketFieldWhitelist,c=100;return[{xtype:"rallynumberfield",name:"historicalDays",minValue:0,maxValue:25,fieldLabel:"# Historical Days",labelAlign:"right",labelWidth:c},{xtype:"rallyfieldcombobox",name:"bucketField",model:this.getArtifactType(),fieldLabel:"Bucket Field",labelAlign:"right",labelWidth:c,_isNotHidden:function(c){if(!c.readOnly&&!c.hidden&&c.attributeDefinition){var d=Ext.Array.contains(b,c.name);return d||(d=Ext.Array.contains(a,c.attributeDefinition.AttributeType)),d}return!1}}]}});
            
               Rally.launchApp('artifact-history-matrix', {
                   name: 'Artifact history matrix'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.rally-title {
    text-transform: uppercase;
    font-family: ProximaNovaSemiBold,Helvetica,Arial;
    font-size: 12px;

}
    </style>

</head>
<body></body>
</html>